{
    "schemes": [],
    "swagger": "2.0",
    "info": {
        "description": "Manage places",
        "title": "DishDash Dashboard",
        "contact": {},
        "version": "1.0"
    },
    "host": "",
    "basePath": "/api/v1",
    "paths": {
        "/collections": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new collection in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Create a collection",
                "parameters": [
                    {
                        "description": "Collection data",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AdminCreateCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Saved collection",
                        "schema": {
                            "$ref": "#/definitions/domain.AdminCollection"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Patch a collection with same id in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Patch a collection",
                "parameters": [
                    {
                        "description": "Collection data",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AdminPatchCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated collection",
                        "schema": {
                            "$ref": "#/definitions/domain.AdminCollection"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections/filter": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of collections preveiws from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Get collections previews",
                "parameters": [
                    {
                        "description": "Filter",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AdminCollectionFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of collections previews",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/domain.AdminCollection"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections/id/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a collection with same id from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Get a collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection",
                        "schema": {
                            "$ref": "#/definitions/domain.AdminCollection"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a collection with same id in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Delete a collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/images/upload/by_file": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Upload file to s3",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Directory in s3 storage",
                        "name": "dir",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A url to the stored image",
                        "schema": {
                            "$ref": "#/definitions/pkg_gateways_http_image.UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Parsing error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/images/upload/by_url": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "UploadByURL a image by url to s3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "UploadByURL a image by url to s3",
                "parameters": [
                    {
                        "description": "URL and directory in s3 storage",
                        "name": "uploadByURLRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_gateways_http_image.uploadByURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A url to the stored image",
                        "schema": {
                            "$ref": "#/definitions/pkg_gateways_http_image.UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Parsing error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/places": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of places from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "places"
                ],
                "summary": "Get places",
                "responses": {
                    "200": {
                        "description": "List of places",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Place"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a place with same id in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "places"
                ],
                "summary": "Update a place",
                "parameters": [
                    {
                        "description": "Place data",
                        "name": "place",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usecase.UpdatePlaceInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated place",
                        "schema": {
                            "$ref": "#/definitions/domain.Place"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new place in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "places"
                ],
                "summary": "Create a place",
                "parameters": [
                    {
                        "description": "Place data",
                        "name": "place",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usecase.SavePlaceInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Saved place",
                        "schema": {
                            "$ref": "#/definitions/domain.Place"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "places"
                ],
                "summary": "Patch a place",
                "parameters": [
                    {
                        "description": "Place data",
                        "name": "place",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usecase.UpdatePlaceInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patched place",
                        "schema": {
                            "$ref": "#/definitions/domain.Place"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/places/by_url": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a place from the database by url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "places"
                ],
                "summary": "Get place by url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "place url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "place data",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/places/filter": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "places"
                ],
                "summary": "Filter places",
                "parameters": [
                    {
                        "description": "Filter params",
                        "name": "place",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repo.PlacesFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Matched places",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Place"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/places/id/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a place from the database by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "places"
                ],
                "summary": "Get place by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Place ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "place data",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a place with same id in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "places"
                ],
                "summary": "Delete a place",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Place ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/places/parse": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "places"
                ],
                "summary": "Parse place with url",
                "parameters": [
                    {
                        "description": "Place URL",
                        "name": "ParsePlaceRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_gateways_http_place.ParsePlaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "place data",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/places/tag": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of tags from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get tags",
                "responses": {
                    "200": {
                        "description": "List of tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Tag"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing tag in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Update a tag",
                "parameters": [
                    {
                        "description": "Tag data",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated tag",
                        "schema": {
                            "$ref": "#/definitions/domain.Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new tag in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Create a tag",
                "parameters": [
                    {
                        "description": "Tag data",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Saved tag",
                        "schema": {
                            "$ref": "#/definitions/domain.Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/places/tag/id/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an existing tag from the database",
                "tags": [
                    "tags"
                ],
                "summary": "Delete a tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag deleted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/stories": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new story in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stories"
                ],
                "summary": "Create a story",
                "parameters": [
                    {
                        "description": "Story data",
                        "name": "story",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Story"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Saved story",
                        "schema": {
                            "$ref": "#/definitions/domain.Story"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Patch a story with the same ID in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stories"
                ],
                "summary": "Patch a story",
                "parameters": [
                    {
                        "description": "Story data",
                        "name": "story",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.StoryPatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated story",
                        "schema": {
                            "$ref": "#/definitions/domain.Story"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/stories/filter": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of story previews from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stories"
                ],
                "summary": "Get stories previews",
                "parameters": [
                    {
                        "description": "Filter",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.StoryFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of stories previews",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/domain.Story"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/stories/id/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a story with the same id from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stories"
                ],
                "summary": "Get a story",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Story ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Story",
                        "schema": {
                            "$ref": "#/definitions/domain.Story"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a story with the same ID in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stories"
                ],
                "summary": "Delete a story",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Story ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.AdminCollection": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "ownerId": {
                    "type": "string"
                },
                "places": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Place"
                    }
                },
                "type": {
                    "$ref": "#/definitions/domain.CollectionType"
                },
                "updatedAt": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "domain.AdminCollectionFilter": {
            "type": "object",
            "properties": {
                "ownerID": {
                    "type": "string"
                },
                "search": {
                    "type": "string"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.CollectionType"
                    }
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "domain.AdminCreateCollection": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "ownerId": {
                    "type": "string"
                },
                "places": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "type": {
                    "$ref": "#/definitions/domain.CollectionType"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "domain.AdminPatchCollection": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "ownerId": {
                    "type": "string"
                },
                "places": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "type": {
                    "$ref": "#/definitions/domain.CollectionType"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "domain.CollectionType": {
            "type": "string",
            "enum": [
                "basic",
                "favorites"
            ],
            "x-enum-varnames": [
                "CollectionTypeBasic",
                "CollectionTypeFavorites"
            ]
        },
        "domain.Coordinate": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                }
            }
        },
        "domain.Place": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "boost": {
                    "type": "number"
                },
                "boostRadius": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "$ref": "#/definitions/domain.Coordinate"
                },
                "priceAvg": {
                    "type": "integer"
                },
                "reviewCount": {
                    "type": "integer"
                },
                "reviewRating": {
                    "type": "number"
                },
                "shortDescription": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "domain.Story": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "src": {
                    "type": "string"
                },
                "stories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.StoryData"
                    }
                },
                "title": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "domain.StoryData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "domain.StoryFilter": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "domain.StoryPatch": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "src": {
                    "type": "string"
                },
                "stories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.StoryData"
                    }
                },
                "title": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "domain.Tag": {
            "type": "object",
            "properties": {
                "excluded": {
                    "description": "Places with excluded tag wont be shown in swipes",
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "pkg_gateways_http_image.UploadResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "pkg_gateways_http_image.uploadByURLRequest": {
            "type": "object",
            "properties": {
                "directory": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "pkg_gateways_http_place.ParsePlaceRequest": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "repo.PlacesFilter": {
            "type": "object",
            "properties": {
                "search": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "usecase.SavePlaceInput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "boost": {
                    "type": "number"
                },
                "boostRadius": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "$ref": "#/definitions/domain.Coordinate"
                },
                "priceMin": {
                    "type": "integer"
                },
                "reviewCount": {
                    "type": "integer"
                },
                "reviewRating": {
                    "type": "number"
                },
                "shortDescription": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "usecase.UpdatePlaceInput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "boost": {
                    "type": "number"
                },
                "boostRadius": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "$ref": "#/definitions/domain.Coordinate"
                },
                "priceMin": {
                    "type": "integer"
                },
                "reviewCount": {
                    "type": "integer"
                },
                "reviewRating": {
                    "type": "number"
                },
                "shortDescription": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Token",
            "in": "header"
        }
    }
}